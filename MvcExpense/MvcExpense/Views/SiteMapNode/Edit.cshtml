@using MvcExpense.MvcExpenseHelper
@model Zac.Mvc.Models.Display.SiteMapNodeEditDisplay

@{
    Layout = "~/Views/Shared/_EditFormLayout.cshtml";
    
    if (Model.ParentSelectList != null)
    {
        Html.Assets().Scripts.Add( "/Scripts/Jit/jit.js" );
        Html.Assets().Scripts.Add( "/Scripts/Views/SiteMapNode/Edit.js" );
    }
}

@if ( Model.ParentSelectList != null )
{
    <script language="javascript" type="text/javascript">
        var tree = @Model.TreeJson;
        
    @if ( Model.PreviousSiblingId.HasValue )
    {
        <text>var previousSibling = @Model.PreviousSiblingId.Value;</text>
    }
    </script>
}

@using ( Html.BeginForm() )
{
    @Html.ValidationSummary( true )
    <fieldset>
        <legend>Site Map Node</legend>
        
        @Html.HiddenFor( model => model.Id )
        
        <div class="editor-label">
            @Html.LabelFor( model => model.Url )
        </div>
        <div class="editor-field">
            @Html.EditorFor( model => model.Url )
            @Html.ValidationMessageFor( model => model.Url )
        </div>
        
        <div class="editor-label">
            @Html.LabelFor( model => model.Title )
        </div>
        <div class="editor-field">
            @Html.EditorFor( model => model.Title )
            @Html.ValidationMessageFor( model => model.Title )
        </div>
        
        <div class="editor-label">
            @Html.LabelFor( model => model.Description )
        </div>
        <div class="editor-field">
            @Html.EditorFor( model => model.Description )
            @Html.ValidationMessageFor( model => model.Description )
        </div>
        
        @if ( Model.ParentSelectList != null )
        {
            <div class="editor-label">
                @Html.LabelFor( model => model.ParentId, "Parent" )
            </div>
            <div class="editor-field">
                @Html.DropDownListFor( model => model.ParentId, Model.ParentSelectList, SystemParameters.DropDownListNullDisplay )
                @Html.ValidationMessageFor( model => model.ParentId )
            </div>
        
            <div id="DivPreviousSibling">
                <div class="editor-label">
                    @Html.LabelFor( model => model.PreviousSiblingId, "Place after" )
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor( model => model.PreviousSiblingId, new List<SelectListItem>() )
                    @*todo SelectListItemCollection.Empty*@
                </div>
            </div>
        }
        
        <p>
            @Html.SubmitButton( "action", "Save", new { accesskey = "S" } )
        </p>
    </fieldset>
}
