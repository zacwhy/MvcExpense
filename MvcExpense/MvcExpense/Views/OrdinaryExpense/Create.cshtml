@model MvcExpense.ViewModels.OrdinaryExpenseViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<script language="javascript" type="text/javascript">
    $(document).ready(function () {
        $(".focus :input").focus();

        $("#Price").blur(function () {
            var value = $("#Price").val();
            //alert(value.substr(0, 1));
            if (value.substr(0, 1) == ".") { //value.match(/^\./)) {
                $("#Price").val("0" + value);
            }
        });
    }); 
</script>

@using ( Html.BeginForm() )
{
    @Html.ValidationSummary( true )
    <fieldset>
        <legend>Ordinary Expense</legend>

        <div class="editor-label">
            @Html.LabelFor( model => model.Date )
        </div>
        <div class="editor-field">
            @Html.EditorFor( model => model.Date )
            <input type="button" value="Today" />
            @Html.ValidationMessageFor( model => model.Date )
        </div>

        <div class="editor-label">
            @Html.LabelFor( model => model.Price )
        </div>
        <div class="editor-field focus">
            @Html.EditorFor( model => model.Price )
            @Html.ValidationMessageFor( model => model.Price )
        </div>

        <div class="editor-label">
            @Html.LabelFor( model => model.Description )
        </div>
        <div class="editor-field">
            @Html.EditorFor( model => model.Description )
            @Html.ValidationMessageFor( model => model.Description )
            past entries suggestion
        </div>

        <div class="editor-label">
            @Html.LabelFor( model => model.CategoryId, "Category" )
        </div>
        <div class="editor-field">
            @Html.DropDownList( "CategoryId", String.Empty )
            @Html.ValidationMessageFor( model => model.CategoryId )
            show tree structure, auto-populate based on description
        </div>
                
        <div class="editor-label">
            @Html.LabelFor( model => model.PaymentMethodId, "Payment Method" )
        </div>
        <div class="editor-field">
            @Html.DropDownList( "PaymentMethodId", String.Empty )
            @Html.ValidationMessageFor( model => model.PaymentMethodId )
            auto-populate based on category selected
        </div>

        <div class="editor-label">
            @Html.LabelFor( model => model.ConsumerId, "Consumer(s)" )
        </div>
        <div class="editor-field">
            @*@Html.DropDownList("ConsumerId", String.Empty)
            @Html.ValidationMessageFor(model => model.ConsumerId)*@

            @Html.ListBoxFor( x => x.SelectedConsumerIds, Model.Consumers, new { size = Model.Consumers.Count() } )
        </div>

        <div class="editor-label">
            @Html.LabelFor( model => model.Remarks )
        </div>
        <div class="editor-field">
            @Html.EditorFor( model => model.Remarks )
            @Html.ValidationMessageFor( model => model.Remarks )
        </div>

        <p>
            <input type="submit" name="action" value="Create" accesskey="C" />
            <input type="submit" name="action" value="Create and New" />
        </p>
    </fieldset>
}

    <ol>
        <li>cache drop down list items</li>
        <li>Category dropdown</li>
        <li>price entry control, calculator that accepts */+- symbols</li>
        <li>autocomplete for description, past entries suggestion</li>
        <li>Date field - hidden value field</li>
    </ol>

    <fieldset>
        <legend>Prototype</legend>
        <div>
            <select>
                <optgroup label="Food">
                    <option>Breakfast</option>
                    <option>Lunch</option>
                    <option>Dinner</option>
                </optgroup>
                <optgroup label="Transport">
                    <option>Bus</option>
                    <option>Train</option>
                    <option>Taxi</option>
                </optgroup>
                <optgroup label="Car">
                    <option>Petrol</option>
                    <option>Parking</option>
                    <option>ERP</option>
                </optgroup>
                <option>Treat</option>
            </select>
        </div>
    </fieldset>

<div>
    @Html.ActionLink( "Back to List", "Index" )
</div>
